一、1091线段重合
 *贪心，按照线段左端点升序排序，
 *左端点相等，右端点降序排序
 */
#include<iostream>
#include<algorithm>
#include<cmath>
using namespace std;
const int MAX=50005;
struct Node{
    int b,e;
};
Node a[MAX];
int cmp(Node p1,Node p2){
    if(p1.b<p2.b) return 1;
    else if(p1.b==p2.b&&p1.e>p2.e) return 1;
    return 0;
}
int main()
{
    int n;
    while(cin>>n){
        for(int i=0;i<n;i++){
            cin>>a[i].b>>a[i].e;
        }
        sort(a,a+n,cmp);
        int res=0;
        Node s=a[0];
        for(int i=1;i<n;i++){
            if(a[i].e<=s.e){//线段i在线段i-1内
                res=max(res,a[i].e-a[i].b);
            }
            else if(a[i].b<=s.e&&a[i].e>s.e){
                res=max(res,s.e-a[i].b);
                s=a[i];//选择最靠后的线段//是因为前面已经取得局部最小，且s.e<a[i].e的后面的数开头肯定比a[i].b大，那么差值s.e-a[i].b就会小。
            }
        }
        cout<<res<<endl;
    }

1344走格子
//找到局部最小值 
#include<iostream>
#include<cmath>
#include<algorithm>
#include<cmath> 
using namespace std;
typedef long long ll;
bool cmp(const int & A, const int & B){
    return A<B;             //如果修改为return A<B就还原为了升序排列
}
int main(){
    ll n,i,sum=0,sum1=0;
    cin>>n;
    ll a[n],b[n];
    for(i=0;i<n;i++){
        cin>>a[i];
    }
//	sort(a,a+n,cmp);
	for(i=0;i<n;i++){
		sum+=a[i];
		b[i]=sum;
		sum1+=b[i];
	}	
	ll z=b[0];
	for(i=1;i<n;i++){
		if(z>=b[i]){
			z=b[i];
		}
	}
	if(z<0){
		cout<<-z<<endl;
	}else{
		cout<<z<<endl;
	}
	return 0;
} 
