//超时版本
#include <iostream>
#include <cstdio>
#include <cmath>
using namespace std;
#define maxn 1000000009
int feibo(int n){
    if(n==2||n==1){
    	return 1;
	}
  if(n==0){
  return 0;
  }
	return feibo(n-1)+feibo(n-2);
 } 
int main() {
    int s,n;
    cin>>n;
    s=feibo(n);
    cout<<s<<endl;
    return 0;
} 
//快一点点
#include<iostream>
using namespace std;
#define d 1000000009 
int main(){
    int n;
    cin>>n;
    int a=0,b=1,c=0;
    for(int i=1;i<n;i++){
        c=a+b;
        a=b%d;
        b=c%d;
    }
    cout<<b<<endl;
    return 0;
}


//快速版
#include<iostream>
using namespace std;
#define mod(a,m) ((a)%(m)+(m))%(m)
const int MOD=1000000009;
struct MATRIX{
	long long a[2][2];
};
MATRIX a;
long long f[2];
void ANS_Cf(MATRIX a)
{
	f[0]=mod(a.a[0][0]+a.a[1][0],MOD);
	f[1]=mod(a.a[0][1]+a.a[1][1],MOD);
	
} 
MATRIX MATRIX_Cf(MATRIX a,MATRIX b)
{
	MATRIX ans;int k;
	for(int i=0;i<2;i++)
	{
		for(int j=0;j<2;j++)
		{
			ans.a[i][j]=0;k=0;
			while(k<2)
			{
				ans.a[i][j]+=a.a[k][i]*b.a[j][k];
				ans.a[i][j]=mod(ans.a[i][j],MOD);
				++k;
			}
		}
	}
	return ans;
}
MATRIX MATRIX_Pow(MATRIX a,long long n)
{
	MATRIX ans;
	ans.a[0][0]=1;ans.a[1][1]=1;
	ans.a[0][1]=0;ans.a[1][0]=0;
	while(n)
	{
		if(n&1) ans=MATRIX_Cf(ans,a);
		n=n>>1;
		a=MATRIX_Cf(a,a);
	}
	return ans;
}
int main()
{
	long long n;
	while(cin>>n)
	{
		a.a[0][0]=a.a[0][1]=a.a[1][0]=1;
		a.a[1][1]=0;
		a=MATRIX_Pow(a,n-2);
		ANS_Cf(a);
		cout<<f[0];
	}
}
